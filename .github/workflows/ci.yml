name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  issues: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true
      - name: Upgrade pip and install latest dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade -r requirements.txt
          pip install --upgrade -r requirements-dev.txt || true
          pip check || true
      - name: Lint and type-check
        run: |
          flake8 || true
          black --check . || true
          isort --check-only . || true
          mypy || true
      - name: Run tests
        run: |
          pytest --cov=src --cov=agents --cov=utils --cov-report=xml

      - name: Prepare triage on failure
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "Installing gh CLI extension and deps..."
          sudo apt-get update -y
          sudo apt-get install -y unzip
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "Downloading logs for this run..."
          gh run download ${{ github.run_id }} --dir logs || true
          echo "Extracting logs..."
          if ls logs/*.zip 1> /dev/null 2>&1; then
            unzip -o "logs/*.zip" -d logs || true
          fi
          echo "Running triage script to create issue..."
          python scripts/triage_failure.py \
            --workflow-name "${{ github.workflow }}" \
            --run-url "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --git-ref "${{ github.ref }}" \
            --commit-sha "${{ github.sha }}" \
            --logs-root logs \
            --tail-lines 200
